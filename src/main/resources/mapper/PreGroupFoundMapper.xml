<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.Idao.PreGroupFoundMapper" >
  <resultMap id="BaseResultMap" type="test.pojo.PreGroupFound" >
    <constructor >
      <idArg column="found_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="activity_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="group_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="group_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    found_id, user_id, activity_id, group_num, group_status, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="test.pojo.PreGroupFoundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <if test="column!=null" >
      ${column}
    </if>
    <if test="column==null" >
      <include refid="Base_Column_List" />
    </if>
    from pre_group_found
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pre_group_found
    where found_id = #{foundId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pre_group_found
    where found_id = #{foundId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.pojo.PreGroupFoundExample" >
    delete from pre_group_found
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.pojo.PreGroupFound" >
    insert into pre_group_found (found_id, user_id, activity_id, 
      group_num, group_status, create_time
      )
    values (#{foundId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, 
      #{groupNum,jdbcType=INTEGER}, #{groupStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="test.pojo.PreGroupFound" >
    insert into pre_group_found
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="foundId != null" >
        found_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="groupNum != null" >
        group_num,
      </if>
      <if test="groupStatus != null" >
        group_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="foundId != null" >
        #{foundId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="groupNum != null" >
        #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="groupStatus != null" >
        #{groupStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.pojo.PreGroupFoundExample" resultType="java.lang.Integer" >
    select count(*) from pre_group_found
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pre_group_found
    <set >
      <if test="record.foundId != null" >
        found_id = #{record.foundId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null" >
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.groupNum != null" >
        group_num = #{record.groupNum,jdbcType=INTEGER},
      </if>
      <if test="record.groupStatus != null" >
        group_status = #{record.groupStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pre_group_found
    set found_id = #{record.foundId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      group_num = #{record.groupNum,jdbcType=INTEGER},
      group_status = #{record.groupStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.pojo.PreGroupFound" >
    update pre_group_found
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="groupNum != null" >
        group_num = #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="groupStatus != null" >
        group_status = #{groupStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where found_id = #{foundId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.pojo.PreGroupFound" >
    update pre_group_found
    set user_id = #{userId,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      group_num = #{groupNum,jdbcType=INTEGER},
      group_status = #{groupStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where found_id = #{foundId,jdbcType=INTEGER}
  </update>
</mapper>